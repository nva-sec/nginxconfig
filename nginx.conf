user ubuntu; # Ensure you replace this with the actual user running your Nginx instance
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    map_hash_bucket_size 128;

    sendfile on;
    tcp_nopush on;

    tcp_nodelay on;

    reset_timedout_connection on;

    access_log off;
    error_log off;
    
    # Dynamic server block to handle any domain
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;  # Catch-all for any domain

        location / { 
            # Upgrade WebSockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'Upgrade';

            # Ensure the forwarded request has the correct host
            proxy_set_header Host $host;

            # Increase header buffer settings
            proxy_connect_timeout 10; 
            proxy_send_timeout 90; 
            proxy_read_timeout 90; 
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;

            # Pass the request to the backend service (UltraViolet or any other app)
            proxy_pass http://127.0.0.1:8080;  # Ensure this matches your application's port

            # Block Googlebot or any other specific user agent if needed
            if ($http_user_agent ~ (Googlebot)) {
                return 403;
            }
        }
    }
}
